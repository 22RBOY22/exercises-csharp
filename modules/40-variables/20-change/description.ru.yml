---
name: Изменение переменной

theory: |

  Само слово «переменная», говорит о том, что ее можно менять. И действительно, с течением времени внутри программы, значения переменных могут изменяться.

  ```cs
  var greeting = "Father!";
  System.Console.WriteLine(greeting);
  System.Console.WriteLine(greeting);

  // var уже не используется, так как переменная была определена выше
  greeting = "Mother!";
  System.Console.WriteLine(greeting);
  System.Console.WriteLine(greeting);
  ```

  C# статически типизированный язык, это значит что тип переменной задается при определении и больше не меняется. В примере выше, при создании переменной, мы присвоили ей строку. Компилятор запоминает тип и проверяет все последующие изменения переменной. Если попробовать этой же переменной присвоить число, то мы получим следующую ошибку:

  ```cs
  greeting = 5;
  # error CS0029: Cannot implicitly convert type 'int' to 'string'
  ```

  Интересно то, что компилятор делает такую проверку без запуска кода на выполнение, именно поэтому такой вид типизации называют статическим (статика – без запуска). В динамических языках, таких как Javascript, Ruby, PHP или Python, подобное поведение не является ошибкой, переменная может легко изменить свой тип в процессе работы.

instructions: |

  В коде определена переменная со значением `"Brienna"`. Переопределите значение этой переменной и присвойте ей такую же, но в перевернутом виде, т.е. расположите символы первоначальной строки в обратном порядке.

tips:
  - |
    Если в редакторе есть запись `// BEGIN` и `// END`, то код нужно писать между этими строчками.

definitions:
  - name: Переменная
    description: Способ сохранить информацию и дать ей имя для последующего использования в коде.
